# -*- coding: utf-8 -*-
"""Untitled27.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1sl3fhZIgw9R31a6V3YWvuiwUrXWdkW8s
"""
#####################################################SID#########################################################

import cv2
import numpy as np

def text_block(text_list, start_coord, spacing = 30, bg_color = 'white', block_shape = (256, 256), font = cv2.FONT_HERSHEY_SIMPLEX, thickness = 3, text_color = (0,0,255)):
  start_coord = list(start_coord)
  if bg_color == 'white':
    blank = np.ones(block_shape, dtype=np.uint8)*255
  else:
    blank = np.zeros(block_shape, dtype=np.uint8)*255

  coord = start_coord
  for text in text_list:
    blank = cv2.putText(blank, text, tuple(coord), font, 1, text_color, thickness, cv2.LINE_AA)
    coord[1] += spacing
  
  #cv2.imwrite('test.png', blank)
  return blank

text_block(['xyz', 'abc', 'lol', 'pol'], (20,20))

#####################################################SID#########################################################

import os
import pandas as pd
import pickle

df = pd.read_csv('FDFML/crop_metadata.csv')

#Family = print(df.iloc[0,1])
#genus = print(df.iloc[0,2])
#species = print(df.iloc[0,3])

print(df.iloc[0,1])#image_name
print(df.iloc[0,2])#family_name
print(df.iloc[0,3])#genes_name
print(df.iloc[0,4])#species_name

family,genus,species = {},{},{}
for image in os.listdir('FDFML/crops'):
  img = cv2.imread(os.path.join('FDFML/crops', image))
  for z in range(len(df)):
    if str(image).split(".")[0] == df.iloc[z,1]:
      if len(family[df.iloc[z,2]]) < 1:
        family[df.iloc[z,2]] = [np.flatten(img)]
      elif len(family[df.iloc[z,2]]) >= 1:
        family[df.iloc[z,2]].append(np.flatten(img))
      if len(family[df.iloc[z,3]]) < 1:
        genus[df.iloc[z,3]] = [np.flatten(img)]
      elif len(family[df.iloc[z,3]]) >= 1:
        genus[df.iloc[z,3]].append(np.flatten(img))  
      if len(family[df.iloc[z,4]]) < 1:
        species[df.iloc[z,4]] = [np.flatten(img)]
      elif len(family[df.iloc[z,4]]) >= 1:
        species[df.iloc[z,4]].append(np.flatten(img))

print(family)
print(genus)
print(species)
print("The length of the family,genus,species is {},{},{}".format(len(family),len(genus),len(species)))          

pickle.dump(family,open("results/FAMILYCV/family_images.pickle","wb"))
pickle.dump(genus,open("results/GENUSCV/genus_images.pickle","wb"))
pickle.dump(species,open("results/SPECIESCV/species_images.pickle","wb"))

